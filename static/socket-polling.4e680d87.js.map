{"mappings":"6TAAA,IAAAA,EAAAC,EAAA,S,uCAKO,MAAMC,EAAS,CAClBC,KAAO,EACPC,MAAQ,EACRC,WAAW,GAId,WACG,MAAMC,QAAsB,EAAAC,EAAAC,sBAC5BC,aAAYC,UACR,MAAOC,EAAUC,SAAgBC,QAAQC,IACrC,EAAC,EAAAC,EAAAC,OAAMC,EAAAC,kBACH,EAAAH,EAAAC,OAAMC,EAAAE,kBACdR,EAASS,SAAQC,KACb,EAAArB,EAAAsB,SAAQhB,EAAciB,QAAQC,wBAAyBH,EAAA,IAE3DT,EAAOQ,SAAQC,KACX,EAAArB,EAAAsB,SAAQhB,EAAcM,OAAOa,eAAgBJ,EAAA,GACjD,GACD,IAEP,EAdC,E","sources":["views/js/socket-polling.js"],"sourcesContent":["import {publish} from \"./pubsub\";\nimport {fetchNotifications} from \"./notifications\";\nimport {eventStatusUrl, streamStatusUrl} from \"../constants\";\nimport {fetch} from \"./fetch\";\n\nexport const socket = {\n    on() { },\n    off() { },\n    connected: true\n};\n\n\n(async () => {\n    const notifications = await fetchNotifications();\n    setInterval(async () => {\n        const [statuses, events] = await Promise.all(\n            [fetch(streamStatusUrl),\n                fetch(eventStatusUrl)]);\n        statuses.forEach(status => {\n            publish(notifications.streams.connectionStatusChanged, status);\n        });\n        events.forEach(status => {\n            publish(notifications.events.eventTriggered, status);\n        })\n    }, 5 * 1000 /* 5 seconds */);\n\n})();"],"names":["$eu6sA","parcelRequire","$8296db07b4cff4ec$export$4f55ed1789bc2dcb","on","off","connected","notifications","$Nxk0L","fetchNotifications","setInterval","async","statuses","events","Promise","all","$feHvS","fetch","$juGzc","streamStatusUrl","eventStatusUrl","forEach","status","publish","streams","connectionStatusChanged","eventTriggered"],"version":3,"file":"socket-polling.4e680d87.js.map"}